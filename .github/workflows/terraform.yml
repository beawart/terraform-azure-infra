name: Terraform Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: # ðŸ‘ˆ Enables manual destroy trigger
    inputs:
      confirm:
        description: 'Type "destroy" to confirm'
        required: true

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  terraform-init:
    name: Terraform Init
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Upload Terraform Init Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraform-init
          path: |
            .
            !.git/

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: terraform-init
    outputs:
      changes_detected: ${{ steps.check-plan.outputs.changes }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Terraform Init Artifacts
        uses: actions/download-artifact@v4
        with:
          name: terraform-init
          path: .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Reinitialize Backend
        run: terraform init -reconfigure

      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan
          terraform show -no-color tfplan > plan_output.txt

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan

      - name: Check for Changes
        id: check-plan
        run: |
          if grep -iq "no changes" plan_output.txt; then
            echo "No changes detected."
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected."
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.changes_detected == 'true' # ðŸ‘ˆ Only run if changes exist
    environment:
      name: production # ðŸ‘ˆ triggers manual approval

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Reinitialize Backend
        run: terraform init -reconfigure

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  terraform-destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.confirm == 'destroy' # ðŸ‘ˆ Only runs when manually triggered
    environment:
      name: production # ðŸ‘ˆ Optional: add approval gate

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
